type Query {
  info: String!
  memes: [Meme!]!
  meme(command: String!): Meme
  commands: [String!]!
  tags: [String!]!
  play(id: ID!): Play
}

type Mutation {
  createMeme(
    name: String!
    author: UserInput!
    url: String!
    start: String!
    end: String!
  ): Meme!
  deleteMeme(name: String!): Meme
  addAliasToMeme(name: String!, alias: String!): Meme
  removeAliasFromMeme(name: String!, alias: String!): Meme
  addTagToMeme(name: String!, tag: String!): Meme
  removeTagFromMeme(name: String!, tag: String!): Meme
  renameMeme(oldName: String!, newName: String!): Meme
  updateVolumeOfMeme(name: String!, volume: Float!): Meme
  logPlay(
    command: String!
    author: UserInput!
    time: String!
    guild: GuildInput!
  ): Play
}

type Meme {
  _id: ID!
  name: String!
  author: User!
  originUrl: String!
  edgeUrl: String!
  space: String!
  key: String!
  sourceUrl: String
  commands: [String!]!
  tags: [String!]
  volume: Float!
  createdAt: String!
}

type Play {
  _id: ID!
  command: String!
  meme: Meme!
  author: User!
  time: String!
  guild: Guild!
}

type User {
  id: ID!
  name: String!
}

type Guild {
  id: ID!
  region: String!
  memeberCount: Int!
}

input UserInput {
  id: ID!
  name: String!
}

input GuildInput {
  id: ID!
  region: String!
  memeberCount: Int!
}
